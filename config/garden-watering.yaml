substitutions:
  name: "garden-watering"
  friendly_name: "Garden Watering"
  id: "garden_watering"
  valve_restore_mode: RESTORE_AND_CALL
  project_name: "ShonP40.ESPWater"
  project_version: "1.0"

esphome:
  name: "${name}"
  project:
    name: "${project_name}"
    version: "${project_version}"

esp8266:
  board: d1_mini

wifi:
  networks:
    ssid: !secret wifi_ssid
    password: !secret wifi_password
  fast_connect: true
  ap:
    ssid: "${friendly_name}"
    password: !secret wifi_password

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
api:
  on_client_disconnected:
      then:
        - valve.close: valve_1
        - valve.close: valve_2
        - valve.close: valve_3
        - valve.close: valve_4

ota:
  platform: esphome
  password: !secret ota_password

web_server:
  port: 80
  version: 3
  auth:
    username: !secret web_server_username
    password: !secret web_server_password

i2c:
  scl: D1
  sda: D2
  scan: true

text_sensor:
  - platform: wifi_info
    ip_address:
      name: ${friendly_name} IP Address
    ssid:
      name: ${friendly_name} SSID
    bssid:
      name: ${friendly_name} BSSID
    mac_address:
      name: ${friendly_name} MAC Address

# BME680 (comment this out if you aren't using a BME680 sensor)
  - platform: bme680_bsec
    iaq_accuracy:
      name: "Outside Air Quality Accuracy"

bme680_bsec:
  address: 0x77
  temperature_offset: 0
  iaq_mode: static
  state_save_interval: 6h
  sample_rate: lp

binary_sensor:
  - platform: status
    name: "${friendly_name} Status"

sensor:
  - platform: uptime
    name: "${friendly_name} Uptime Sensor"
  - platform: wifi_signal
    name: "${friendly_name} WiFi Signal"
    update_interval: 60s

# BME680 (comment this out if you aren't using a BME680 sensor)
  - platform: bme680_bsec
    temperature:
      name: "Outside Temperature"
      id: outside_temperature
    pressure:
      name: "Outside Pressure"
      id: outside_pressure
    humidity:
      name: "Outside Humidity"
      id: outside_humidity
    gas_resistance:
      name: "Outside Gas Resistance"
      id: outside_gas_resistance
    iaq:
      name: "Outside Air Quality"
    co2_equivalent:
      name: "Outside CO2"
    breath_voc_equivalent:
      name: "Outside Breath VOC"

# SHT3X-D (comment this out if you aren't using a SHT3X-D sensor)
  - platform: sht3xd
    temperature:
      name: "Soil Temperature"
    humidity:
      name: "Soil Humidity"
    address: 0x44
    update_interval: 60s

# PMWCS3 (comment this out if you aren't using a PMWCS3 sensor)
  - platform: pmwcs3
    e25:
      name: "Soil E25"
    ec:
      name: "Soil EC"
    temperature:
      name: "Soil Temperature"
    vwc:
      name: "Soil VWC"

button:
  - platform: restart
    id: restart_button
    name: "${friendly_name} Restart"

switch:
  - platform: gpio
    id: valve_1_switch
    pin: D5
    internal: true
  - platform: gpio
    id: valve_2_switch
    pin: D6
    internal: true
  - platform: gpio
    id: valve_3_switch
    pin: D7
    internal: true
  - platform: gpio
    id: valve_4_switch
    pin: D8
    internal: true

valve:
  - platform: template
    name: "Valve 1"
    id: valve_1
    device_class: water
    lambda: |-
      if (id(valve_1_switch).state) {
        return VALVE_OPEN;
      } else {
        return VALVE_CLOSED;
      }
    open_action:
      - switch.turn_on: valve_1_switch
    close_action:
      - switch.turn_off: valve_1_switch
    stop_action:
      - switch.turn_off: valve_1_switch
    optimistic: true
    restore_mode: ${valve_restore_mode}
  - platform: template
    name: "Valve 2"
    id: valve_2
    device_class: water
    lambda: |-
      if (id(valve_2_switch).state) {
        return VALVE_OPEN;
      } else {
        return VALVE_CLOSED;
      }
    open_action:
      - switch.turn_on: valve_2_switch
    close_action:
      - switch.turn_off: valve_2_switch
    stop_action:
      - switch.turn_off: valve_2_switch
    optimistic: true
    restore_mode: ${valve_restore_mode}
  - platform: template
    name: "Valve 3"
    id: valve_3
    device_class: water
    lambda: |-
      if (id(valve_3_switch).state) {
        return VALVE_OPEN;
      } else {
        return VALVE_CLOSED;
      }
    open_action:
      - switch.turn_on: valve_3_switch
    close_action:
      - switch.turn_off: valve_3_switch
    stop_action:
      - switch.turn_off: valve_3_switch
    optimistic: true
    restore_mode: ${valve_restore_mode}
  - platform: template
    name: "Valve 4"
    id: valve_4
    device_class: water
    lambda: |-
      if (id(valve_4_switch).state) {
        return VALVE_OPEN;
      } else {
        return VALVE_CLOSED;
      }
    open_action:
      - switch.turn_on: valve_4_switch
    close_action:
      - switch.turn_off: valve_4_switch
    stop_action:
      - switch.turn_off: valve_4_switch
    optimistic: true
    restore_mode: ${valve_restore_mode}
